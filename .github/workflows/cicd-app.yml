################# DEV deployment ###########################
#
# Deploys terraform config in dev/* branches to DEV env
#
#############################################################
name: App-Check-interact

on: 
  push:
    branches:
      - 'appdev/**'
    paths:
      - 'app/**'

defaults:
  run:
    working-directory: app

concurrency: 
  group: ${{ github.action == 'App-Check-interact' }}
  cancel-in-progress: true
  
jobs:
  test_codeql:
    name: Initialize CodeQL
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v1
      - name: codeql
        uses: github/codeql-action/init@v1
        with:
          languages: go, javascript

    # Here is where you build your code
      - run: |
          ls -al
          go build -o send
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
        continue-on-error: true
  
  lint-helm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Lint Helm
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm lint ./chart-service/

  build_docker:
    name: 'Create Container'
    runs-on: localrunner
    needs: [test_codeql, lint-helm]

    steps:
      - name: Checkout
        uses: actions/checkout@master
      
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
          credentials_file_path: ./gcloudkey.json

      - name: Cluster env for staging/dev/pro
        if: "github.event.release.prerelease"
        run: |
          BRANCH=$(git branch -r --contains ${GITHUB_SHA} | grep "")
          MASTER_BRANCH_NAME='origin/master'
          
          if [[ "$BRANCH" == *"$MASTER_BRANCH_NAME"* ]]; then
            echo ::set-env name=CLUSTER_ENV::stag
          else
            echo ::set-env name=CLUSTER_ENV::dev
          fi
      
      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          echo "Building image "
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud builds submit --timeout=1200 --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.CLUSTER_ENV }}_${{ env.SERVICE }}:${{  github.sha }}   --verbosity=debug --gcs-log-dir=gs://kalopsianet_cloudbuild/logs
          gcloud container images add-tag  gcr.io/${{ env.PROJECT_ID }}/${{ env.CLUSTER_ENV }}_${{ env.SERVICE }}:${{  github.sha }} gcr.io/${{ env.PROJECT_ID }}/${{ env.ENVIRONMENT }}_${{ env.SERVICE }}:latest   --verbosity=debug 

        #docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        #docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT }}
          SERVICE: rabbitcheck

  deploy_helm:
    name: 'Deploy Charts'
    runs-on: localrunner
    needs: [build_docker]
    environment:
      name: DEV

    steps:
      - name: Checkout
        uses: actions/checkout@master
      
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
          credentials_file_path: ${HOME}/.gcloud.json
    
      - name: Get vars
        if: github.event_name == 'push' 
        id: varsCluster
        run: |
            echo ::set-env name=CLUSTERNAME::$(grep "^name" ../environment/${{ secrets.PREFIX }}.tfvars | cut -d '"' -f2)
            echo ::set-env name=CLUSTERZONE::$(grep "^region" ../environment/${{ secrets.PREFIX }}.tfvars | cut -d '"' -f2)
# echo "CLUSTERNAME=$(grep "^name" ../environment/${{ secrets.PREFIX }}.tfvars | cut -d '"' -f2)" >> $GITHUB_ENV
# echo "CLUSTERZONE=$(grep "^region" ../environment/${{ secrets.PREFIX }}.tfvars | cut -d '"' -f2)" >> $GITHUB_ENV


      - id: get-credentials
        if:  github.event_name == 'push' 
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: ${{ env.CLUSTERNAME }}
          location: ${{ env.CLUSTERZONE }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          use_internal_ip: true



      - name: Deploy helm
        run: |
          echo "CLUSTERIP=$(kubectl get svc check-service-rabbitmq-helm -o jsonpath='{.spec.clusterIP}')"  >> $GITHUB_ENV
          helm upgrade --install check-service chart-service/ \
              --set configmap.rmq_url="amqp://${{ secrets.RABBITUSER }}:${{ secrets.RABBITPASS }}@${{ env.CLUSTERIP }}:5672/"
      # - name: Deploy
      #   uses: WyriHaximus/github-action-helm3@v2
      #   with:
      #     exec: helm upgrade check-service ./chart-service/ --install --wait --atomic --values=./chart-service/values.yaml --set configmap.rmq_url="amqp://97Kiz8riWRsGeBpptuwg41p9FffIBdk6:0zbLBA6c1TDOKAqd__WmFORoQrNnwFR3@10.102.99.135:5672/"
      #     kubeconfig: '${{ secrets.KUBECONFIG }}'

